{"version":3,"file":"index.js","sources":["../index.js"],"sourcesContent":["/**\r\n *\r\n * @param {object} object - Object that holds the value.\r\n * @param {string} key - Key of the value\r\n * @param {number} target - Target of the animation\r\n * @param {{spring: number, damping: number, friction: number, snapThreshold: number  }} options\r\n */\r\nexport function springu(object, key, target, options) {\r\n\tlet current = object[key];\r\n\tlet currentVelocity = object[key + \"Velocity\"];\r\n\tif (currentVelocity == null) {\r\n\t\tcurrentVelocity = 0;\r\n\t}\r\n\t// Don't use lerpy bc I prings needs the flooring after.\r\n\tlet acceleration = (target - current) * options.spring;\r\n\tlet velocity =\r\n\t\t(currentVelocity * options.damping + acceleration) * options.friction;\r\n\r\n\tif (Math.abs(velocity) < options.snapThreshold) {\r\n\t\tvelocity = target - current;\r\n\t}\r\n\tobject[key + \"Velocity\"] = velocity;\r\n\treturn velocity;\r\n}\r\n\r\nexport default springu;\r\n"],"names":["springu","object","key","target","options","current","currentVelocity","velocity","damping","spring","friction","Math","abs","snapThreshold"],"mappings":"SAOgBA,EAAQC,EAAQC,EAAKC,EAAQC,GAC5C,IAAIC,EAAUJ,EAAOC,GACjBI,EAAkBL,EAAOC,EAAM,YACZ,MAAnBI,IACHA,EAAkB,GAGnB,IACIC,GACFD,EAAkBF,EAAQI,SAFRL,EAASE,GAAWD,EAAQK,QAEML,EAAQM,SAM9D,OAJIC,KAAKC,IAAIL,GAAYH,EAAQS,gBAChCN,EAAWJ,EAASE,GAErBJ,EAAOC,EAAM,YAAcK,EACpBA"}